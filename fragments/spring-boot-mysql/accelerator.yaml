accelerator:
  options:
    - name: databaseName
      inputType: text
      defaultValue: "customer-database"
      label: Database Instance Name
      description: The name of the database instance this application will use

engine:
  let:
    - name: databaseResourceName
      expression: '#databaseName.toLowerCase()'
  chain:
    - merge:
      - include: [ "**" ]
        exclude: [ "docker-compose.yaml", "**/workload.yaml", "pom.xml", "build.gradle.kts", "README.md" ]

      - include: [ "pom.xml" ]
        chain:
          - type: ReplaceText
            regex:
              pattern: "(?<startOfDependencies><dependencies>)(?<existingDependencies>(?![\\s\\S]+<groupId>com.mysql</groupId>\\s*<artifactId>mysql-connector-j</artifactId>[\\s\\S]+</dependencies>))"
              with: |
                '${startOfDependencies}
                        <dependency>
                            <groupId>com.mysql</groupId>
                            <artifactId>mysql-connector-j</artifactId>
                            <scope>runtime</scope>
                        </dependency>${existingDependencies}'

      - include: [ "build.gradle.kts" ]
        chain:
          - type: ReplaceText
            regex:
              pattern: "(?<startOfDependencies>dependencies \\{)(?<existingDependencies>(?![\\s\\S]+implementation\\s*\\(\"com.mysql:mysql-connector-j[\\s\\S]+))"
              with: |
                '${startOfDependencies}
                    runtimeOnly("com.mysql:mysql-connector-j")${existingDependencies}'

      - include: [ "docker-compose.yaml" ]
